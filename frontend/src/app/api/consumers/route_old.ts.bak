import { NextResponse } from 'next/server';
import fs from 'fs';
import path from 'path';
import { ConsumerRiskScore } from '@/types';

function parseCSV(csvContent: string): ConsumerRiskScore[] {
  const lines = csvContent.trim().split('\n');
  const headers = lines[0].split(',');
  
  return lines.slice(1).map(line => {
    const values = line.split(',');
    const consumer: any = {};
    
    headers.forEach((header, index) => {
      const value = values[index];
      const key = header.trim();
      
      if (key === 'consumer_id' || key === 'risk_category' || key === 'detection_date') {
        consumer[key] = value;
      } else {
        consumer[key] = parseFloat(value);
      }
    });
    
    return consumer as ConsumerRiskScore;
  });
}

export async function GET() {
  try {
    const filePath = path.join(process.cwd(), '..', 'outputs', 'consumer_risk_scores.csv');
    const fileContents = fs.readFileSync(filePath, 'utf8');
    const data = parseCSV(fileContents);
    
    return NextResponse.json(data);
  } catch (error) {
    console.error('Error reading consumer risk scores:', error);
    return NextResponse.json(
      { error: 'Failed to load consumer risk scores' },
      { status: 500 }
    );
  }
}
